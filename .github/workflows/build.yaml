name: Build contract

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  emit-source-info:
    name: Source information
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          path: source

      - name: Remove the git objects
        run: rm -rf source/.git

      - name: Archive the source
        run: zip source.zip source

      - name: Show the hash of the source as notation
        run: echo "::notice title=witness.sourceCodeHash::$(sha256sum source.zip | cut -d ' ' -f 1)"

      - name: Uplaod source code
        uses: actions/upload-artifact@v2
        with:
          name: Source code
          path: source.zip

  build-contract:
    name: Build contract
    runs-on: ubuntu-20.04
    steps:
      - name: Install Rust toolchain
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Install cargo-contract
        run: cargo install cargo-contract --version=^3

      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Compile the contract
        run: cargo contract build --release --output-json | tee output.json

      - name: Archive the contract and show the hash
        run: |
          cat output.json | jq -r '.dest_wasm, .metadata_result.dest_metadata, .metadata_result.dest_bundle' | zip -@ -j contract.zip
          echo "::notice title=witness.contractPackageHash::$(sha256sum contract.zip | cut -d ' ' -f 1)"
          cat output.json | jq -r '.metadata_result.dest_metadata' | xargs jq -r '.source.hash' > contract_code_hash
          echo "::notice title=witness.contractWasmCodeHash::$(cat contract_code_hash)"

      - name: Upload the contract
        uses: actions/upload-artifact@v2
        with:
          name: ink
          path: contract.zip
